<head>
	<link rel="stylesheet" href="/stylesheets/jq-steps/normalize.css">	
	<link rel="stylesheet" href="/stylesheets/jq-steps/main.css">	
	<link rel="stylesheet" href="/stylesheets/jq-steps/jquery.steps.css">	
	<link rel="stylesheet" href="/stylesheets/jq-steps/custom.css">	
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
	<!-- Add this line to include Font Awesome CSS -->

	
	<script src="/js/jq-steps/modernizr-2.6.2.min.js"></script>	
	<script src="/js/jq-steps/jquery-1.11.1.min.js"></script>	
	<script src="/js/jq-steps/jquery.cookie-1.3.1.js"></script>	
	<script src="/js/jq-steps/jquery.steps.js"></script>	
	<script src="/js/jq-steps/jquery.validate.min.js"></script>

</head>
<body>
<!--<div class="pg-header">
	<h4 class="install_title"><span style="height:30px"><img  src="/images/Nifty-EWS.png" height="80%" /></span>Gym Master - GYM Management Installation Wizard</h4>
</div>-->
<div class="step-bg">
<div class="step-content">
	<Form id="install-form" class="form-horizontal" action="/installation" method="POST">
		<div>
			<h3>Verify Key</h3>
			<section id="pkey-verify">
    <h3>Verify Purchase Key</h3>
    <div class="form-group">
        <label class="control-label">Purchase Key<span class="text-danger">*</span></label>
        <div class="col-md-12 p-0">
            <div class="input text">
                <input type="text" name="pkey" class="form-control required padding-css">
            </div>
        </div>
    </div>
    <div class="form-group">
        <label class="control-label">Email<span class="text-danger">*</span></label>
        <div class="col-md-12 p-0">
            <div class="input text">
                <input type="text" id="email1" name="email1" class="form-control required email padding-css">
            </div>
        </div>
    </div>
	<div class="row" id="pkeyrow">
						<div class="col-md-3">
						<button type="button" id="checkPkeyBtn" class="btn btn-sm btn-primary align-self-start">Check Purchase Key</button>
						</div>
<div class="col-md-9" id="verificationStatus"></div>
						{{!-- <p> (*) Fields are required.</p> --}}
					</div>
</section>
			<h3>Database Setup</h3>
				<section>
					<h4>Database Setup</h4>
					<hr/>
					<div class="form-group sub">
						<label class="control-label">Database Name<span class="text-danger"> *</span></label>
						<div class="col-md-12 p-0">
						<div class="input text">
						<input type="text" name="dbname" class="form-control required padding-css">
						</div>
						</div>
					</div>
					
					<div class="form-group sub">
						<label class="control-label">Database Username<span class="text-danger">*</span></label>
						<div class="col-md-12 p-0">
						<div class="input text">
						<input type="text" name="db_username" class="form-control required padding-css">
						</div>
						</div>
					</div>
					<div class="form-group sub">
    <label class="control-label">Database Password<span class="text-danger">*</span></label>
    <div class="col-md-12 p-0">
        <div class="input text">
            <div class="password-input-container">
                <input type="password" id="password1" name="db_pass" class="form-control padding-css required padding-css">
                <span toggle="#password1" class="fa fa-fw fa-eye field-icon toggle-password"></span>
            </div>
        </div>
    </div>
</div>

					<div class="form-group sub">
						<label class="control-label">Host<span class="text-danger"> *</span></label>
						<div class="col-md-12 p-0">
						<div class="input text">
						<input type="text" value="localhost:27017" name="db_host" class="form-control required padding-css">
						</div>
						</div>
					</div>
					{{!-- <div class="form-group">
						<label class="control-label">Port<span class="text-danger"> *</span></label>
						<div class="col-md-12 p-0">
						<div class="input text">
						<input type="text" value="localhost:27017" name="db_port" class="form-control required padding-css">
						</div>
						</div>
					</div> --}}
					<div class="row">
						<div class="col-md-4">
						<button type="button" id="checkConnectionBtn" class="btn btn-sm btn-primary align-self-start">Check Connection</button>
						</div>
<div class="col-md-8" id="connectionStatus"></div>
						{{!-- <p> (*) Fields are required.</p> --}}
					</div>
				</section>
			<h3>System Setting</h3>
			<section id="step-2"> 
			  <h4>System Setting</h4>
			  <hr/>
			  <div class="form-group">
				  <label class="control-label">System Name<span class="text-danger"> *</span></label>
				  <div class="col-md-12 p-0">
				  <div class="input text">
				  <input type="text" name="name" class="form-control required padding-css" value="EWS - Early Warning System">
				  </div>
				  </div>
			  </div>	
				<div class="form-group">
					<label class="control-label">Email <span class="text-danger">*</span></label>
					<div class="col-md-12 p-0">
					<div class="input text">
					<input type="text" id="email2" name="email" class="form-control required email padding-css">
					</div>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">Date Format</label>
					<div class="col-md-12 p-0">
					<select name="date_format" class="form-control plan_list required">
						<option value="m-d-Y">mm-dd-YYYY</option>
						<option value="m/d/Y">mm/dd/YYYY</option> 
						<option value="Y-m-d">YYYY-mm-dd</option>
						<option value="F j, Y">Month D, YYYY</option>
					</select>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">System Language</label>
					<div class="col-md-12 p-0">
						<select id="lang-selector" name="sys_language" class="form-control">
							<option value="en">English</option>
							<option value="hi">Hindi</option>
							<option value="fr">French</option>
							<option value="sp">Spanish</option>
						</select>				
					</div>
				</div> 
				
			</section>  
			 <h3>Login Details</h3>
			<section>
			<h4>Login Details</h4>
					<hr/>
					<div class="form-group">
						<label class="control-label">Username<span class="text-danger"> *</span></label>
						<div class="col-md-12 p-0">
						<div class="input text">
						<input type="text" name="username" class="form-control required padding-css">
						</div>
						</div>
					</div>
					<div class="form-group">
						<label class="control-label">Password<span class="text-danger"> *</span></label>
						<div class="col-md-12 p-0">
						<div class="input text">
							<div class="password-input-container">
						<input type="password" id="password" name="password" class="form-control required password padding-css">
						<span toggle="#password" class="fa fa-fw fa-eye field-icon toggle-password"></span>
						</div>
						</div>
						</div>
					</div>
					
					<div class="form-group">
						<label class="control-label">Confirm Password<span class="text-danger"> *</span></label>
						<div class="col-md-12 p-0">
						<div class="input text">
							<div class="password-input-container">
						<input type="password" name="confirm" id="cpass" class="form-control required padding-css">
						<span toggle="#cpass" class="fa fa-fw fa-eye field-icon toggle-password"></span>
						</div>
						</div>
						</div>
					</div> 			
			</section>
			<h3>Finish</h3>
			<section id="final">
				<h4>Please Note :</h4>
				<hr/>					
				<p>
					1. It may take couple of minutes to set-up database.
				</p>			
				<p>
					2. Do not refresh page after to you click on install button.
				</p>
				<p>
					3. You will be redirected to the login page once after installation finishes.
				</p>
				<p>
					4. Click on install to complete the installation.
				</p>
				
				<div id="loader" style="display:none;">
					<p>			
						<hr/>
						<h4>Please Wait System is now installing..</h4>
					</p>
				</div>
			</section>
		</div>	
	</Form>
</div>
</div>	
</body>
<script>
	
$(function ()
 {
		$(".actions").hide();
	{{!-- $(".sub").hide(); --}}
	$("#checkConnectionBtn").hide();


var form = $("#install-form");
form.validate({
    errorPlacement: function errorPlacement(error, element) { error.addClass("text-danger"); // Add Bootstrap class for text color
            error.insertAfter(element.closest('.form-group').find('.control-label')); },
    rules: {
        confirm: {
            equalTo: "#password"
        }
    }
});

form.children("div").steps({
	 labels: {
        cancel: "Cancel",
        current: "current step:",
        pagination: "Pagination",
        finish: "Install Now",
        next: "Next Step",
        previous: "Previous Step",
        loading: "Loading ..."
    },	
    headerTag: "h3",
    bodyTag: "section",	
    transitionEffect: "slideLeft",
	
	
    onStepChanging: function (event, currentIndex, newIndex)
    {
		if (newIndex > currentIndex) {
        // Check the database connection for the next step
        if (currentIndex === 1 && !$(".actions [href='#next']").hasClass('disabled')) {
            // Only on the first step and if not disabled, check the database connection
            checkDatabaseConnection();
        }
		if (newIndex === 1) {
                $(".actions").hide();
            } else {
                $(".actions").show();
            }
        form.validate().settings.ignore = ":disabled,:hidden";
        return form.valid();
    } else {
        // Allow moving to the previous step without validation
        return true;
    }
    },
    onFinishing: function (event, currentIndex)
    {
		$("#loader").css("display","block");
        form.validate().settings.ignore = ":disabled";
        return form.valid();
    },
    onFinished: function (event, currentIndex)
    {				
        form.submit();
    }
});
const emailField = $("#email1");

  // Assuming the email field in the third step has the id 'email-step-3'
  const emailStep3Field = $("#email2");

  // Whenever the email field in the first step changes, update the email field in the third step
  emailField.on("input", function () {
    emailStep3Field.val($(this).val());
  });
 var nextStepButton = $(".actions");
    nextStepButton.hide(); 
  $("#checkConnectionBtn").on("click", function () {
    // Manually trigger the form validation
    form.validate().settings.ignore = ":disabled,:hidden";
    if (form.valid()) {
     $(this).prop("disabled", true);
       $("#connectionStatus").html("<i class='fa fa-spinner fa-spin'></i> Checking connection...");
      var connectionData = {
        dbname: $("input[name='dbname']").val(),
        db_username: $("input[name='db_username']").val(),
        db_pass: $("input[name='db_pass']").val(),
        db_host: $("input[name='db_host']").val(),
      };
      $.ajax({
        type: "POST",
        url: "/ajxfun/check-connection", // Replace with your server endpoint for checking connection
        data: connectionData,
success: function (response) {
  var connectionStatus = $("#connectionStatus");
  if (response.success) {
    connectionStatus.html("<span class='text-success text-fade-in-out'>Connection successful!</span>");
    // Enable the "Next Step" button
    nextStepButton.show();
    $("#checkConnectionBtn").hide();
	 $(".actions").show();
  } else {
    connectionStatus.html("<span class='text-danger text-shake'><i class='fa-solid fa-triangle-exclamation errorcon'></i>Connection failed. " + response.message + "</span>");
    // Disable the "Next Step" button
    nextStepButton.hide();
	$(".actions").hide();
  }
},
error: function () {
  var connectionStatus = $("#connectionStatus");
  connectionStatus.html("<span class='text-danger' id='text-shake'><i class='fa-solid fa-triangle-exclamation errorcon'></i>Connection failed. Credentials are wrong.</span>");
  // Disable the "Next Step" button
  nextStepButton.hide();
},
 complete: function () {
                    // Re-enable the button and hide loading spinner after 3 seconds
                    setTimeout(function () {
                        $("#checkConnectionBtn").prop("disabled", false);
                        $("#connectionStatus").empty();
                    }, 3000);
                }
      });
    }
  });
function checkDatabaseConnection() {
        // Make an AJAX request to the server-side script to check the database connection
		if ($("input[name='dbname']").val() === '' || 
        $("input[name='db_username']").val() === '' || 
        $("input[name='db_pass']").val() === '' || 
        $("input[name='db_host']").val() === '') {
        
        // Display an error message
        alert("Please fill in all the database fields.");
        return;
    }
        $.ajax({
            type: "POST",
            url: "/ajxfun/checkDatabaseConnection", // Replace with the actual route or endpoint for database connection check
            data: form.serialize(), // Serialize form data
            success: function (response) {
                if (response.success) {
                    // Database connection successful
                    // Enable the next step
                    $("#connectionStatus").hide();
					 $("#step-2").show();
                } else {
                    // Database connection failed
                    alert("Error connecting to the database: " + response.error);
					{{!-- form.children("div").steps("setStep", 0); --}}
                    $("#step-2").hide();
                    $("#connectionStatus").show();
                }
            },
            error: function (error) {
                console.error("Error checking database connection:", error);
				{{!-- form.children("div").steps("previous"); --}}
				 $("#step-2").hide();
				$("#connectionStatus").html("<i class='fa-solid fa-triangle-exclamation errorcon'></i>Credentials are wrong.").css('color', 'red').show();
            }
        });
    }
	
// Function to compare two semver versions (e.g., "v14.17.6")
$(".toggle-password").on("click", function() {
    var passwordField = $($(this).attr("toggle"));
    var fieldType = passwordField.attr("type");
    if (fieldType === "password") {
        passwordField.attr("type", "text");
        $(this).removeClass("fa-eye").addClass("fa-eye-slash");
    } else {
        passwordField.attr("type", "password");
        $(this).removeClass("fa-eye-slash").addClass("fa-eye");
    }
});
 $("#checkPkeyBtn").on("click", function () { // Change event from blur to 
    
    // Show loading spinner
 form.validate().settings.ignore = ":disabled,:hidden";
        if (form.valid()) {
  $(this).prop("disabled", true);
    $("#verificationStatus").html("<i class='fa fa-spinner fa-spin'></i> Verifying purchase key...");
        const pkey = $("input[name='pkey']").val();
		const email1 = $("input[name='email1']").val();
    if (pkey) {
      // Make an AJAX request to the server to verify the pkey
      $.ajax({
        type: "POST",
        url: "/ajxfun/verify-purchase-key",
		data: { purchaseCode: pkey, email: email1 },
        success: function (response) {
          if (response.success) {
            // Show a success message
            $("#checkPkeyBtn").hide();
            {{!-- $("#checkConnectionBtn").show(); --}}
            showMessage("success", response.message);
			
          } else {
            // Show an error message
            showMessage("error", response.message);
          }
        },
        error: function () {
          // Show an error message
          showMessage("error", "An error occurred while verifying the purchase key.");
        },
        complete: function () {
                    // Re-enable the button and hide loading spinner after 3 seconds
                    setTimeout(function () {
                        $("#checkPkeyBtn").prop("disabled", false);
                        $("#verificationStatus").empty();
                    }, 3000);
                }
      });
    }
 }
  });
  function showMessage(type, message, icon = false) {
  {{!-- const messageContainer = $("#verificationStatus"); --}}
  const messageContainer = type === "success" ? $("#verificationStatus") : $("#verificationStatus");
  messageContainer.empty();
   const messageElement = $("<p>").text(message).addClass("font-weight-bold m-0");
	if (type === "success") {
        messageElement.addClass("text-success");
		$(".actions").show();
    } else {
        messageElement.addClass("text-danger");
    }
	 messageElement.hide().fadeIn(500);
  messageContainer.append(messageElement);
  setTimeout(() => {
    messageElement.fadeOut(1000, () => messageContainer.empty());
  }, 3000);
  if (type === "success") {
            $("#checkConnectionBtn").show();
        }
}

});

</script>


