{{breadcrums (__ 'Home') (__ 'EMI Pending Reports')}}

<div class="app-content center-layout mt-2 mx-md-3 px-1">
<div class="row" style="">
		<div class=" col-lg-12 col-md-12 mb-1 prrr-2 heading-elements p-0 text-right" >
		<a class="heading-elements-toggle"><i class="fa fa-ellipsis-v font-medium-3"></i></a>
				<div class="heading-elements ews-heading">
					<ul class="list-inline mb-0">
					<li id="export">
						<select class="select2 form-control export">
							<option value="">{{__ "Export"}}</option>
							<option value="csv">{{__ "XLSX"}}</option>
							<option value="pdf">{{__ "PDF"}}</option>
						</select>
					</li>	
					</ul>
				</div>
		</div>
		</div>
    <div class="content-wrapper">
	<div class="row">
	<div class="col-md-12">
	<div class="card">
	 
	<div class="card-content collpase show">
	 
		<!-- Zero configuration table -->
        <section id="configuration">
        <div class="row">
            <div class="col-12">
             <div class="card">
                
                <div class="card-content collapse show">
				
				<!--{{log messages}}-->
				{{#if messages.error  }}
			<script>
					toastr.error("{{messages.error}}","{{__ 'Error!'}}" , {"showMethod": "fadeIn", "hideMethod": "fadeOut", timeOut: 5000});
				</script>
			{{/if}}
			{{#if messages.success }}
				<script>
					toastr.success("{{messages.success}}", "{{__ 'Sucess!'}}", {"showMethod": "fadeIn", "hideMethod": "fadeOut", timeOut: 5000});
				</script>
			{{/if}}
                <div class="card-body card-dashboard card-design">
					
					<section id="horizontal">
						<div class="row">
						<div class="col-12">
						<div class="card">
							<div class="card-content collapse show" id="NF-datatable">
							<div class="card-body p-0">
								<div id="grid"></div>
								<div id="window"></div>
								
							</div>
						</div>
							
							<div class="card-content collapse show">
							<div class="card-body card-dashboard">
							

							<script type="x/kendo-template" id="page-template">
								 <div class="page-template">
									<div class="header">
									   <div style="float: right"></div>
									  EMI Pending Reports 
									</div>
									<div class="footer">
									 
									</div>
								</div>
							</script>
						
    <script >
       jQuery(document).ready(function() {
	
		$('body').on('change', '.export', function() {
		var value = $(this).val();
		if(value == 'csv')
		{
			$("#grid").getKendoGrid().saveAsExcel();
		}else if(value == 'pdf')
		{
			$("#grid").getKendoGrid().saveAsPDF();
		}
	});
		
		
		 var window1 = $("#window").kendoWindow({
            title: "{{__ 'Alert !'}}",
			resizable: false,
            visible: false, //the window will not appear before its .open method is called
           
        }).data("kendoWindow");
		
		
		var element=$("#grid").kendoGrid({
						
				pdf: {
					
		allPages: true,
		template: $("#page-template").html(),
		avoidLinks: true,
		fileName: "service-list.pdf",// Bug 277	
		paperSize: "A4",
		margin: { top: "2cm", left: "1cm", right: "1cm", bottom: "1cm" },
		landscape: true,
		repeatHeaders: true,
		scale: 0.8,
		
		},
		excel: {
		fileName: "service-list.xlsx",// Bug 277
		allPages:true
		},
		scrollable: true,
		pdfExport: function(e) {
				
                  var grid = $("#grid").data("kendoGrid");
                  <!-- grid.hideColumn(0); -->
                  grid.hideColumn(12);
                  e.promise
                  .done(function() {
                      <!-- grid.showColumn(0); -->
                      grid.showColumn(12);
                  });
                },
				
				dataSource: {
				serverPaging: false,
			    serverSorting: false,
				 transport: {
					read: {  
						url: '/ajxfun/emipendingreport',
						dataType: "json",					
					},
					destroy:{
							url: '/ajxfun/service/delete',
							dataType: "json",
							type:'get',
							complete: function(e) {
								$("#grid").data("kendoGrid").dataSource.read(); 
								console.log(e.responseText);
								if(e.responseText=="true"){
									
									toastr.success("{{__ "Service Deleted Successfully!"}}", {"showMethod": "fadeIn", "hideMethod": "fadeOut", timeOut: 5000}); 
									
								}else{
									
									 toastr.error("{{__ " Error! Service Can Not Be Deleted!"}}", {"showMethod": "fadeIn", "hideMethod": "fadeOut", timeOut: 5000}); 
									 
								}
							}
						},
					
				 }, 
				schema: {
                        model: {
							id: "_id",
                            fields: {
                                _id: { validation: { required: true } },
                                reminder_nm: { validation: { required: true } },
                                reminder_template: { validation: { required: true } },
                                reminder_desc: { validation: { required: true } },
                                reminder_will_send: { validation: { required: true } },	 
                            }
                        }
                    },  
                    pageSize: 10,
					batch: false,
					requestEnd: function (e) {
								if (e.type == "create" && e.response) {
									enablefilter();
							}
						}
                },
                
                sortable: true,
                reorderable: true,
                groupable: true,
                resizable: true,
                filterable: {
					mode: "row",
					 messages: {
          info: "{{__ 'Show items with value that:'}}",
		  isEqualTo: "{{__ 'Is equal to'}}",
		  and: "{{__ 'And'}}",
		  or: "{{__ 'Or'}}",
		  clear: "{{__ 'Clear'}}",
		  filter: "{{__ 'Filter'}}",
		  isTrue: "{{__ 'is true'}}",
      isFalse: "{{__ 'is false'}}",
      isEmpty: "{{__ 'is empty'}}",
      isNotEmpty: "{{__ 'is not empty'}}"
        },
		operators: {
      string: {
        eq: "{{__ 'is equal to'}}",
        neq: "{{__ 'is not equal to'}}",
        startswith: "{{__ 'starts with'}}",
        contains: "{{__ 'contains'}}",
        doesnotcontain: "{{__ 'does not contain'}}",
        endswith: "{{__ 'ends with'}}",
        isnull: "{{__ 'is null'}}",
        isnotnull: "{{__ 'is not null'}}"
      }
    }
				},
                columnMenu: {
    messages: {
      columns: "{{__ 'Columns'}}",
	  filter : "{{__ 'Filter'}}",
	  sortAscending: "{{__ 'Sort Ascending'}}", 
	  sortDescending: "{{__ 'Sort Descending'}}", 
    },
  },
												pageable: {
					input: true,
					numeric: false,
					pageSize: 10,
					pageSizes: [10, 20, 25, 50, 100],
					messages: {
	  display: "{{__ '{0} - {1} of {2} items'}}",
      empty: "{{__ 'No items to display'}}",
      page: "{{__ 'Page'}}",
	  of: "{{__ 'of {0}'}}", 
      itemsPerPage: "{{__ 'items per page'}}",
      first: "{{__ 'Go to the first page'}}",
      previous: "{{__ 'Go to the previous page'}}",
      next: "{{__ 'Go to the next page'}}",
      last: "{{__ 'Go to the last page'}}",
      refresh: "{{__ 'Refresh'}}"
    }
				},
                noRecords: true,
				messages: {
            noRecords: "{{__ 'No records available.'}}"
        },
                columns: [
					
    
    {
        field: "user.firstname",
        title: "{{__ 'Username'}}",
        width: 150
    },
    {
        field: "loan.loancount",
        title: "{{__ 'Loan No'}}",
        width: 100
    },
    {
        field: "month",
        title: "{{__ 'EMI Month'}}",
        width: 100
    },
    {
        field: "date",
        title: "{{__ 'EMI Date'}}",
        
        width: 100
    },
    {
        field: "monthly_payment",
        title: "{{__ 'EMI Amount'}}",
        width: 120,
        format: "{0:n2}" // Format to display numbers with 2 decimal places
    },
    {
        field: "loan.loanamount",
        title: "{{__ 'Loan Amount'}}",
        width: 120
    },
    {
        field: "loan.interestrate",
        title: "{{__ 'Interest Rate'}}",
        width: 100,
        hidden:true
    },
    {
        field: "user.mobile",
        title: "{{__ 'Phone'}}",
        width: 120,
        hidden: true
    },
    {
        field: "user.email",
        title: "{{__ 'Email'}}",
        width: 150
    }


                ],
				editable: {
                mode: "inline"
            }
            }); 
        });
        </script>  
							</div>
							</div>
						</div>
						</div>
						</div>
					</section>
				</div>
				</div>
			</div>
			</div>
		</div>
		</section>
	</div>
	</div>
	</div>
	</div>
	</div>
	</div> 